import { processTest, populateTransaction } from "../../test.fixture";

const contractName = "LibertiV2Proxy";

const testLabel = "withdrawWithSymbolCheck"; // <= Name of the test
const testDirSuffix = "withdraw_with_symbol_check"; // <= directory to compare device snapshots to
const testNetwork = "polygon";
const signedPlugin = false;

const contractAddr = "0x3899623b60552CFacD5AF014E56BFadd14E116c6";
const chainID = 137;

// From : https://polygonscan.com/tx/0x06c7657633e946ff10f520489845e2162ab84a69fff6f03bdc3927dcdab24fbe
const inputData =
    "0xa34a09ec00000000000000000000000000000000000000000000000005282a7f3f3ca0850000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf12700000000000000000000000008b59e61065de08ec02bd44bc2f121f0343ed536e0000000000000000000000000000000000000000000000000169f41a03211d9900000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000086c69574d41544943000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022812aa3caf000000000000000000000000ce9cc1fa6df298854f77e92042fd2a3e7fb27eff000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f0000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf1270000000000000000000000000604229c960e5cacf2aaeac8be68ac07ba9df81c30000000000000000000000003899623b60552cfacd5af014e56bfadd14e116c6000000000000000000000000000000000000000000000000000000000000912700000000000000000000000000000000000000000000000000e3a336a06bef340000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009f00000000000000000000000000000000000000000000000000008100001a0020d6bdbf78c2132d05d31c914a87c6611c10748aeb04b58e8f00206ae4071138002dc6c0604229c960e5cacf2aaeac8be68ac07ba9df81c31111111254eeb25477b68fb85ed929f73a9605820000000000000000000000000000000000000000000000000000000000000001c2132d05d31c914a87c6611c10748aeb04b58e8f00458441b3000000000000000000000000000000000000000000000000";

const serializedTx = populateTransaction(contractAddr, inputData, chainID);

const devices = [
    {
        name: "nanos",
        label: "Nano S",
        steps: 10, // <= Define the number of steps for this test case and this device
    },
    {
        name: "nanox",
        label: "Nano X",
        steps: 6, // <= Define the number of steps for this test case and this device
    },
    {
        name: "nanosp",
        label: "Nano S+",
        steps: 6, // <= Define the number of steps for this test case and this device
    },
];

devices.forEach((device) => {
    processTest(
        device,
        contractName,
        testLabel,
        testDirSuffix,
        "",
        signedPlugin,
        serializedTx,
        testNetwork
    );
});
