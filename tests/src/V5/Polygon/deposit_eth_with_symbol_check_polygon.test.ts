import { processTest, populateTransaction } from "../../test.fixture";

const contractName = "LibertiV2Proxy";

const testLabel = "depositEthWithSymbolCheck"; // <= Name of the test
const testDirSuffix = "deposit_eth_with_symbol_check"; // <= directory to compare device snapshots to
const testNetwork = "polygon";
const signedPlugin = false;

const contractAddr = "0x3899623b60552CFacD5AF014E56BFadd14E116c6";
const chainID = 137;

// From : https://polygonscan.com/tx/0x8055bd0d37ba935ba89190ae3909aa6b8e196172311504cf3311e9edfe992048
const inputData =
    "0x7a8947910000000000000000000000008b59e61065de08ec02bd44bc2f121f0343ed536e000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000086c69574d415449430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000002e0000000000000000000000000000000000000000000000000000000000000026812aa3caf000000000000000000000000ce9cc1fa6df298854f77e92042fd2a3e7fb27eff000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f000000000000000000000000ce9cc1fa6df298854f77e92042fd2a3e7fb27eff0000000000000000000000003899623b60552cfacd5af014e56bfadd14e116c6000000000000000000000000000000000000000000000000016345785d8a0000000000000000000000000000000000000000000000000000000000000000decd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cd0000000000000000000000000000000000000000000000af00002000000600206b4be0b940410d500b1d8e8ef31e21c99d1db9a6444d3adf1270d0e30db00c200d500b1d8e8ef31e21c99d1db9a6444d3adf127055ff76bffc3cdd9d5fdbbc2ece4528ecce45047e6ae40711b8002dc6c055ff76bffc3cdd9d5fdbbc2ece4528ecce45047e1111111254eeb25477b68fb85ed929f73a96058200000000000000000000000000000000000000000000000000000000000000010d500b1d8e8ef31e21c99d1db9a6444d3adf127000000000000000000000000000000000000000458441b3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020812aa3caf000000000000000000000000ce9cc1fa6df298854f77e92042fd2a3e7fb27eff000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf1270000000000000000000000000ce9cc1fa6df298854f77e92042fd2a3e7fb27eff0000000000000000000000003899623b60552cfacd5af014e56bfadd14e116c6000000000000000000000000000000000000000000000000016345785d8a00000000000000000000000000000000000000000000000000000162ea854d0fc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006c00000000000000000000000000000000000000000000004e00002000000600206b4be0b940610d500b1d8e8ef31e21c99d1db9a6444d3adf1270d0e30db080a06c4eca270d500b1d8e8ef31e21c99d1db9a6444d3adf12701111111254eeb25477b68fb85ed929f73a9605820000000000000000000000000000000000000000458441b3000000000000000000000000000000000000000000000000";

const serializedTx = populateTransaction(contractAddr, inputData, chainID, "0.2");

const devices = [
    {
        name: "nanos",
        label: "Nano S",
        steps: 6, // <= Define the number of steps for this test case and this device
    },
    {
        name: "nanox",
        label: "Nano X",
        steps: 6, // <= Define the number of steps for this test case and this device
    },
    {
        name: "nanosp",
        label: "Nano S+",
        steps: 6, // <= Define the number of steps for this test case and this device
    },
];

devices.forEach((device) => {
    processTest(
        device,
        contractName,
        testLabel,
        testDirSuffix,
        "",
        signedPlugin,
        serializedTx,
        testNetwork
    );
});
