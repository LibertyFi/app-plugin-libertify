import { processTest, populateTransaction } from "../../test.fixture";

const contractName = "LibertiV2Proxy";

const testLabel = "depositEthWithSymbolCheck"; // <= Name of the test
const testDirSuffix = "deposit_eth_with_symbol_check"; // <= directory to compare device snapshots to
const testNetwork = "polygon";
const signedPlugin = false;

const contractAddr = "0x654d0cc27b31810d38fd0f02f4e4bb8055a8a567";
const chainID = 137;

// From : https://polygonscan.com/tx/0x443f046509e77db144abf7de2354ec63b21169893c753b2454b2042e41e0b57d
const inputData =
  "0xaa2daba6000000000000000000000000000000000000000000000000dcd85fca30897d48000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000e7bb76134cc8091738afb3dd297d9eee31cdcade00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000086c69574d41544943000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000280000000000000000000000000000000000000000000000000000000000000020812aa3caf000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd09000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee0000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf1270000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd09000000000000000000000000654d0cc27b31810d38fd0f02f4e4bb8055a8a5670000000000000000000000000000000000000000000000004a78c74deec338110000000000000000000000000000000000000000000000004a3f958df4723fd50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006c00000000000000000000000000000000000000000000004e00002000000600206b4be0b940610d500b1d8e8ef31e21c99d1db9a6444d3adf1270d0e30db080a06c4eca270d500b1d8e8ef31e21c99d1db9a6444d3adf12701111111254eeb25477b68fb85ed929f73a9605820000000000000000000000000000000000000000458441b3000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000026812aa3caf000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd09000000000000000000000000eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd09000000000000000000000000654d0cc27b31810d38fd0f02f4e4bb8055a8a567000000000000000000000000000000000000000000000000925f987c41c645370000000000000000000000000000000000000000000000000000000000517bed000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001400000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cd0000000000000000000000000000000000000000000000af00002000000600206b4be0b940410d500b1d8e8ef31e21c99d1db9a6444d3adf1270d0e30db00c200d500b1d8e8ef31e21c99d1db9a6444d3adf12704db1087154cd5b33fa275a88b183619f1a6f66146ae40711b800249f004db1087154cd5b33fa275a88b183619f1a6f66141111111254eeb25477b68fb85ed929f73a96058200000000000000000000000000000000000000000000000000000000000000010d500b1d8e8ef31e21c99d1db9a6444d3adf127000000000000000000000000000000000000000458441b3000000000000000000000000000000000000000000000000";

const serializedTx = populateTransaction(
  contractAddr,
  inputData,
  chainID,
  "0.2"
);

const devices = [
  {
    name: "nanos",
    label: "Nano S",
    steps: 6, // <= Define the number of steps for this test case and this device
  },
  {
    name: "nanox",
    label: "Nano X",
    steps: 6, // <= Define the number of steps for this test case and this device
  },
  {
    name: "nanosp",
    label: "Nano S+",
    steps: 6, // <= Define the number of steps for this test case and this device
  },
];

devices.forEach((device) => {
  processTest(
    device,
    contractName,
    testLabel,
    testDirSuffix,
    "",
    signedPlugin,
    serializedTx,
    testNetwork
  );
});
