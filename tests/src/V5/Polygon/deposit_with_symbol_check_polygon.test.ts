import { processTest, populateTransaction } from "../../test.fixture";

const contractName = "LibertiV2Proxy";

const testLabel = "depositWithSymbolCheck"; // <= Name of the test
const testDirSuffix = "deposit_with_symbol_check"; // <= directory to compare device snapshots to
const testNetwork = "polygon";
const signedPlugin = false;

const contractAddr = "0x654d0cc27b31810d38fd0f02f4e4bb8055a8a567";
const chainID = 137;

// From : https://polygonscan.com/tx/0xf64680e10ddfc98ff83a8f21dd3752c162cfc379e18dd020b7406154c15b0b87
const inputData =
  "0xaa2daba6000000000000000000000000000000000000000000000000000a5b92f1b180d300000000000000000000000028424507fefb6f7f8e9d3860f56504e4e5f5f39000000000000000000000000063674aa00a4c24ea99b10499fc858e39ffa4fda400000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000086c69414d574554480000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000002c812aa3caf000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd0900000000000000000000000028424507fefb6f7f8e9d3860f56504e4e5f5f390000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f000000000000000000000000e37e799d5077682fa0a244d46e5649f71457bd09000000000000000000000000654d0cc27b31810d38fd0f02f4e4bb8055a8a56700000000000000000000000000000000000000000000000000012a05fbc43a36000000000000000000000000000000000000000000000000000000000007ddbb0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000013f00000000000000000000000000000000000000000000000000012100001a0020d6bdbf7828424507fefb6f7f8e9d3860f56504e4e5f5f39000a007e5c0d20000000000000000000000000000000000000000000000000000e300007c41208dff5e27ea6b7ac08ebfdf9eb090f32ee9a30fcf002469328dec0000000000000000000000007ceb23fd6bc0add59e62ac25578270cff1b9f6190000000000000000000000000000000000000000000000000000000000000000000000000000000000000000737da5f520b47cb15af413fdf93f036d83113a1c00206ae40711b8000f4240737da5f520b47cb15af413fdf93f036d83113a1c1111111254eeb25477b68fb85ed929f73a96058200000000000000000000000000000000000000000000000000000000000000017ceb23fd6bc0add59e62ac25578270cff1b9f61900458441b3000000000000000000000000000000000000000000000000";

const serializedTx = populateTransaction(contractAddr, inputData, chainID);

const devices = [
  {
    name: "nanos",
    label: "Nano S",
    steps: 8, // <= Define the number of steps for this test case and this device
  },
  {
    name: "nanox",
    label: "Nano X",
    steps: 6, // <= Define the number of steps for this test case and this device
  },
  {
    name: "nanosp",
    label: "Nano S+",
    steps: 6, // <= Define the number of steps for this test case and this device
  },
];

devices.forEach((device) => {
  processTest(
    device,
    contractName,
    testLabel,
    testDirSuffix,
    "",
    signedPlugin,
    serializedTx,
    testNetwork
  );
});
