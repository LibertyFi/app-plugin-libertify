import { processTest, populateTransaction } from "../../test.fixture";

const contractName = "LibertiV2Proxy";

const testLabel = "depositWithSymbolCheck"; // <= Name of the test
const testDirSuffix = "deposit_with_symbol_check"; // <= directory to compare device snapshots to
const testNetwork = "polygon";
const signedPlugin = false;

const contractAddr = "0x9f4294dc2ba0e4569cbfa3d8a0a5f2f23385db50";
const chainID = 137;

// From : https://polygonscan.com/tx/0xdd3ad2fbeacf4c41bd4358c2dadb993825b01044cac0f2367581d75b51c9bdf7
const inputData =
  "0xaa2daba600000000000000000000000000000000000000000000000002c68af0bb1400000000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf12700000000000000000000000008b59e61065de08ec02bd44bc2f121f0343ed536e00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000086c69574d4154494300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000022812aa3caf000000000000000000000000ce9cc1fa6df298854f77e92042fd2a3e7fb27eff0000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf1270000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000055ff76bffc3cdd9d5fdbbc2ece4528ecce45047e0000000000000000000000009f4294dc2ba0e4569cbfa3d8a0a5f2f23385db50000000000000000000000000000000000000000000000000016345785d8a0000000000000000000000000000000000000000000000000000000000000000d4a40000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009f00000000000000000000000000000000000000000000000000008100001a0020d6bdbf780d500b1d8e8ef31e21c99d1db9a6444d3adf127000206ae40711b8002dc6c055ff76bffc3cdd9d5fdbbc2ece4528ecce45047e1111111254eeb25477b68fb85ed929f73a96058200000000000000000000000000000000000000000000000000000000000000010d500b1d8e8ef31e21c99d1db9a6444d3adf127000458441b3000000000000000000000000000000000000000000000000";

const serializedTx = populateTransaction(contractAddr, inputData, chainID);

const devices = [
  {
    name: "nanos",
    label: "Nano S",
    steps: 6, // <= Define the number of steps for this test case and this device
  },
  {
    name: "nanox",
    label: "Nano X",
    steps: 6, // <= Define the number of steps for this test case and this device
  },
  {
    name: "nanosp",
    label: "Nano S+",
    steps: 6, // <= Define the number of steps for this test case and this device
  },
];

devices.forEach((device) => {
  processTest(
    device,
    contractName,
    testLabel,
    testDirSuffix,
    "",
    signedPlugin,
    serializedTx,
    testNetwork
  );
});
