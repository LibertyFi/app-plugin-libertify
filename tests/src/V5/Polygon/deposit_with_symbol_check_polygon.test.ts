import { processTest, populateTransaction } from "../../test.fixture";

const contractName = "LibertiV2Proxy";

const testLabel = "depositWithSymbolCheck"; // <= Name of the test
const testDirSuffix = "deposit_with_symbol_check"; // <= directory to compare device snapshots to
const testNetwork = "polygon";
const signedPlugin = false;

const contractAddr = "0x3899623b60552CFacD5AF014E56BFadd14E116c6";
const chainID = 137;

// From : https://polygonscan.com/tx/0xe80f85775b2cd3bd7b097071771c95a595ab34812b1b5766351be6a10617da2c
const inputData =
    "0x50806b5000000000000000000000000000000000000000000000000002c68af0bb1400000000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf12700000000000000000000000008b59e61065de08ec02bd44bc2f121f0343ed536e00000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000086c69574d41544943000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022812aa3caf000000000000000000000000ce9cc1fa6df298854f77e92042fd2a3e7fb27eff0000000000000000000000000d500b1d8e8ef31e21c99d1db9a6444d3adf1270000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f000000000000000000000000604229c960e5cacf2aaeac8be68ac07ba9df81c30000000000000000000000003899623b60552cfacd5af014e56bfadd14e116c6000000000000000000000000000000000000000000000000016345785d8a0000000000000000000000000000000000000000000000000000000000000000debb0000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000009f00000000000000000000000000000000000000000000000000008100001a0020d6bdbf780d500b1d8e8ef31e21c99d1db9a6444d3adf127000206ae40711b8002dc6c0604229c960e5cacf2aaeac8be68ac07ba9df81c31111111254eeb25477b68fb85ed929f73a96058200000000000000000000000000000000000000000000000000000000000000010d500b1d8e8ef31e21c99d1db9a6444d3adf127000458441b3000000000000000000000000000000000000000000000000";

const serializedTx = populateTransaction(contractAddr, inputData, chainID);

const devices = [
    {
        name: "nanos",
        label: "Nano S",
        steps: 6, // <= Define the number of steps for this test case and this device
    },
    {
        name: "nanox",
        label: "Nano X",
        steps: 6, // <= Define the number of steps for this test case and this device
    },
    {
        name: "nanosp",
        label: "Nano S+",
        steps: 6, // <= Define the number of steps for this test case and this device
    },
];

devices.forEach((device) => {
    processTest(
        device,
        contractName,
        testLabel,
        testDirSuffix,
        "",
        signedPlugin,
        serializedTx,
        testNetwork
    );
});
